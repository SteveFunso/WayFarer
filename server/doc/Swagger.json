{
    "swagger": "2.0",
    "info": {
      "description": "This is a documentation for the WayFarer API. Also available through the application URL",
      "version": "1.0.0",
      "title": "Wafarer API",
      "contact": {
        "email": "sfadegbola@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "https://way-farer-api-alc.herokuapp.com/api/v1"
      }
    },
    "host": "herokuapp.com",
    "basePath": "/v1",
    "tags": [
      {
        "name": "Users",
        "description": "Everything about your Users"
      },
      {
        "name": "Trips",
        "description": "Everything about trips"
      },
      {
        "name": "Bookings",
        "description": "Operations about Bookings"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Add a new user to the store",
          "description": "This endpoint signs up a new user",
          "operationId": "adduser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be signed Up",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Signs in user by email address and password",
          "description": "Email address and password used for granting access to user account",
          "operationId": "signIn",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "users account status",
              "required": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "isActive",
                  "notActive"
                ],
                "default": "notActive"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/trips": {
        "post": {
          "tags": [
            "Trips"
          ],
          "summary": "Create trips for users",
          "description": "Create trips for users.",
          "operationId": "createTrips",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "tags",
              "in": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Trips"
                }
              }
            },
            "400": {
              "description": "Invalid tag value"
            }
          }
        },
        "get": {
          "tags": [
            "Trips"
          ],
          "summary": "Get trips for users",
          "description": "Get trips for users.",
          "operationId": "TripsGet",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "tags",
              "in": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Trips"
                }
              }
            },
            "400": {
              "description": "Invalid value"
            }
          }
        }
      },
      "/trips/:tripId": {
        "patch": {
          "tags": [
            "Trips"
          ],
          "summary": "Cancel trips for users",
          "description": "Cancel trips for users.",
          "operationId": "cancelTrip",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "tags",
              "in": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Trips"
              }
            },
            "400": {
              "description": "Invalid tag value"
            }
          }
        }
      },
      "/bookings": {
        "post": {
          "tags": [
            "Bookings"
          ],
          "summary": "Create bookings",
          "description": "Returns the newly created cooking for the user with booking id, user id",
          "operationId": "createBookings",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "description": "ID of the booking to return",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Bookings"
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Booking creation failed"
            }
          }
        },
        "get": {
          "tags": [
            "Bookings"
          ],
          "summary": "Get bookings for users",
          "description": "Get booking for users.",
          "operationId": "BookingGet",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "tags",
              "in": "query",
              "description": "Tags to filter by",
              "required": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Bookings"
                }
              }
            },
            "400": {
              "description": "Invalid value"
            }
          }
        }
      },
      "/bookings/:bookingId": {
        "delete": {
          "tags": [
            "Bookings"
          ],
          "summary": "Deletes a boooking",
          "description": "",
          "operationId": "delateBooking",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "bookingId",
              "in": "path",
              "description": "ID of booking to delete",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Bookings"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Trips": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "is_admin": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Trips"
        }
      },
      "Bookings": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "is_admin": {
            "type": "boolean"
          },
          "trip_id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "Bookings"
        }
      }
    }
  }